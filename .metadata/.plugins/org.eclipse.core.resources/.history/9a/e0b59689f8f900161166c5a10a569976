public class Mean implements IGrader
{
	protected IFilter m_filter;
	protected int[] m_grades;
	
	//private IFilter m_IFilter;
	
	public Mean(int[] grads, IFilter filter) {

		m_grades = grads;
		m_filter = filter;
    }
    
    @Override
    public double grade()
    {
        return average();
    }
    
    protected double average()
    {
        double sum = 0.0;
        for (int i : m_grades)
            sum += i;
        return sum/m_grades.length;
    }
}
/*
public class Mean implements IGrader{
	protected IFilter m_filter;
	protected int[] m_grades;
	
	private IFilter m_IFilter;
	
	public Mean(int[] grads, IFilter filter) {
		m_grades = grads;
		m_filter = filter;
	}
	public double grade() {
		return m_grades;
	}
	protected double average() {
		return 0;
	}

}*/
//public Mean(int[] grads, IFilter filter) {
/*
public class Mean implements IGrader
{
    protected int[] m_grades;
    
    public Mean(int[] grades)
    {
        m_grades = grades;
    }
    
    @Override
    public double grade()
    {
        return average();
    }
    
    protected double average()
    {
        double sum = 0.0;
        for (int i : m_grades)
            sum += i;
        return sum/m_grades.length;
    }
}
*/